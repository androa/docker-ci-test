version: 2.1

orbs:
  nais: navikt/nais-deployment@1.1.1
  docker: circleci/docker@0.5.1

executors:
  java:
     docker:
       - image: circleci/openjdk:11-jdk
  toolbox:
    docker:
      - image: alpine:latest
  deployment:
    docker:
      - image: navikt/deployment-cli
  kustomize:
    docker:
      - image: bitlayer/kustomize@sha256:ab559c7a492656e0260680f89b71cdf07ee79e190020354563e0fdd5f986ac00

jobs:
  build-and-push:
    executor: java
    steps:
      - checkout
      - run:
          name: Lint, test, and build application
          command: ./scripts/tests || mvn build || npm build || true
      - setup_remote_docker
      - docker/check
      - docker/build:
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_SHA1
      - docker/push:
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_SHA1

  prepare-nais:
    executor: kustomize
    steps:
      - checkout
      - run:
          name: Install root certificates
          command: apk --no-cache add ca-certificates curl
      - run:
          name: Install yq
          command: |
            curl -fLSs https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64 > /usr/local/bin/yq
            chmod +x /usr/local/bin/yq
      - run:
          name: Set up necessary environment variables for deployment
          command: |
            echo "export TEAM_NAME=$(yq r nais/base/kustomization.yaml commonLabels.team)" >> ./nais/deploy.env
            echo "export APP_NAME=$(yq r nais/base/kustomization.yaml commonLabels.app)" >> ./nais/deploy.env
            echo "export ZONE=$(yq r nais/base/kustomization.yaml commonAnnotations.zone)" >> ./nais/deploy.env
      - run:
          name: "Set image on base overlay"
          command: yq w -i nais/base/nais.yaml spec.image ./nais/base/nais.yaml docker.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      - run:
          name: "Prepare kustomized service contracts"
          command: |
            kustomize build ./nais/dev -o ./nais/nais-dev-deploy.yaml && cat ./nais/nais-dev-deploy.yaml
            kustomize build ./nais/prod -o ./nais/nais-prod-deploy.yaml &&  cat ./nais/nais-prod-deploy.yaml
      - persist_to_workspace:
          root: ./nais
          paths:
            - ./*deploy.yaml
            - deploy.env

  acceptance-test-uat:
    executor: toolbox
    steps:
      - run: ./scripts/test/uat || true

  acceptance-test-integration:
    executor: toolbox
    steps:
      - run: ./scripts/test/integration || true

  acceptance-test-benchmark:
    executor: toolbox
    steps:
      - run: ./scripts/test/benchmark || true

  deploy-preprod:
    executor: deployment
    steps:
      - attach_workspace:
          at: /tmp/nais
      - run: cat /tmp/nais/deploy.env >> $BASH_ENV
      - run: env
      - nais/generate-nais-deployment:
          nais-template: /tmp/nais/nais-dev-deploy.yaml
          github-app-id: 1337
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          environment: dev-fss
          repo: navikt/CIRCLE_PROJECT_REPONAME
          team: dw-team

  deploy-prod:
    executor: deployment
    steps:
      - nais/generate-nais-deployment:
          nais-template: /tmp/nais/nais-prod-deploy.yaml
          github-app-id: 1337
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          environment: dev-fss
          repo: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          team: awesome-team

workflows:
  version: 2.1
  build-test-and-deploy:
    jobs:
      - build-and-push
      - prepare-nais
      - deploy-preprod:
          context: my-context
          requires:
            - build-and-push
            - prepare-nais
      - acceptance-test-uat:
          requires:
            - deploy-preprod
      - acceptance-test-integration:
          requires:
            - deploy-preprod
      - acceptance-test-benchmark:
          requires:
            - deploy-preprod
      - deploy-prod:
          requires:
            - acceptance-test-uat
            - acceptance-test-integration
            - acceptance-test-benchmark
          filters:
            branches:
              only: master
